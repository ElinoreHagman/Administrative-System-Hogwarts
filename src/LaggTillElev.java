
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/*
 * Denna sida dyker upp när man klickar på knappen för registrering av elev på HanteraElever-sidan och
 * här registrerar man en ny elev genom att fylla i alla fält och klicka på registrera-knappen.
 *
 * @author Elinore Hagman
 */
public class LaggTillElev extends javax.swing.JFrame {

    private InfDB idb;

    // Creates new form LaggTillElev
    public LaggTillElev(InfDB idb) {
        initComponents();
        this.idb = idb;

        // Denna metod anropas när sidan öppnas och fyller i dropdown-menyn med de elevhem som finns.
        fyllElevhemCombobox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRegistrera = new javax.swing.JButton();
        txtFornamn = new javax.swing.JTextField();
        txtEfternamn = new javax.swing.JTextField();
        lbSovsal = new javax.swing.JLabel();
        lbEfternamn = new javax.swing.JLabel();
        lbFornamn = new javax.swing.JLabel();
        panelTitel = new javax.swing.JPanel();
        lbRubrik = new javax.swing.JLabel();
        btnTillbaka = new javax.swing.JLabel();
        cbElevhem = new javax.swing.JComboBox<>();
        lbElevhem = new javax.swing.JLabel();
        cbSovsal = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        btnRegistrera.setText("Registrera");
        btnRegistrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistreraActionPerformed(evt);
            }
        });

        lbSovsal.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbSovsal.setText("Sovsal:");

        lbEfternamn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbEfternamn.setText("Efternamn:");

        lbFornamn.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbFornamn.setText("Förnamn:");

        panelTitel.setBackground(new java.awt.Color(204, 204, 204));

        lbRubrik.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        lbRubrik.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbRubrik.setText("Registrera en ny elev");

        javax.swing.GroupLayout panelTitelLayout = new javax.swing.GroupLayout(panelTitel);
        panelTitel.setLayout(panelTitelLayout);
        panelTitelLayout.setHorizontalGroup(
            panelTitelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbRubrik, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelTitelLayout.setVerticalGroup(
            panelTitelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTitelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lbRubrik)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        btnTillbaka.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Bilder/icons8-go-back-24.png"))); // NOI18N
        btnTillbaka.setText("Gå tillbaka");
        btnTillbaka.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTillbakaMouseClicked(evt);
            }
        });

        cbElevhem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbElevhemItemStateChanged(evt);
            }
        });

        lbElevhem.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lbElevhem.setText("Elevhem:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelTitel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTillbaka)
                .addContainerGap(312, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbFornamn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbEfternamn, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbSovsal, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbElevhem, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtEfternamn, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFornamn, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbElevhem, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbSovsal, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnRegistrera, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelTitel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbFornamn)
                    .addComponent(txtFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbEfternamn))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbElevhem)
                            .addComponent(cbElevhem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(btnRegistrera, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSovsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSovsal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(btnTillbaka)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fyllElevhemCombobox() {
    // Denna metod fyller ut dropdown-menyn med de olika elevhemmen som finns i databasen.

        try {
            ArrayList<HashMap<String, String>> elevhemLista = idb.fetchRows("SELECT ELEVHEMSNAMN FROM ELEVHEM");

            // Loopen går igenom varje namn som finns i kolumnen ELEVHEMSNAMN och lägger till den i dropdown-menyn
            for (int i = 0; i < elevhemLista.size(); i++) {
                cbElevhem.addItem(elevhemLista.get(i).get("ELEVHEMSNAMN"));
            }

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Något gick fel!");
            System.out.println("Internt felmeddelande:" + e.getMessage());
        }
    }

    private void btnRegistreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistreraActionPerformed
    // Registrerar eleven med den information användaren har fyllt i på sidan.
    
        // Dessa ser till att fälten inte lämnas tomma och att det endast skrivs in ett förnamn och ett efternamn.
        if (Validering.Kolla2TommaFalt(txtFornamn, txtEfternamn)) {
            if (Validering.KollaOmEndastEttNamn(txtFornamn, txtEfternamn)) {

                // Registrerar en ny elev med all relevant information.
                String nyttFornamn = txtFornamn.getText();
                String nyttEfternamn = txtEfternamn.getText();
                int sovsalen = Integer.parseInt(cbSovsal.getSelectedItem().toString());

                try {
                    String nyttId = idb.getAutoIncrement("elev", "elev_id");
                    idb.insert("INSERT INTO ELEV VALUES (" + nyttId + ", '" + nyttFornamn + "', '" + nyttEfternamn + "', " + sovsalen + ")");
                    JOptionPane.showMessageDialog(null, "Ny elev har registrerats!");

                    txtFornamn.setText(null);
                    txtEfternamn.setText(null);

                } catch (InfException e) {
                    JOptionPane.showMessageDialog(null, "Nåt gick fel");
                    System.out.println("Internt felmeddelande:" + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnRegistreraActionPerformed

    private void btnTillbakaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTillbakaMouseClicked
        // Metoden stänger ner denna sida.
        setVisible(false);
    }//GEN-LAST:event_btnTillbakaMouseClicked

    private void cbElevhemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbElevhemItemStateChanged
        // Ändrar innehållet på sovsalsdropdown-menyn beroende på vilket elevhem användaren har valt i elevhemdropdown-menyn.
        
        // Tar bort innehållet i sovsaldropdown-menyn och fylls på vid varje elevhemsbyte så sovsalarna inte lagras på varandra.
        cbSovsal.removeAllItems();
        
        String valtElevhem = cbElevhem.getSelectedItem().toString();

        try {
            int elevhemId = Integer.parseInt(idb.fetchSingle("SELECT ELEVHEM_ID FROM ELEVHEM WHERE ELEVHEMSNAMN = '" + valtElevhem + "'"));
            ArrayList<HashMap<String, String>> sovsalLista = idb.fetchRows("SELECT SOVSAL_ID FROM SOVSAL WHERE ELEVHEM = " + elevhemId);

            for (int i = 0; i < sovsalLista.size(); i++) {
                cbSovsal.addItem(sovsalLista.get(i).get("SOVSAL_ID"));
            }

        } catch (InfException e) {
            JOptionPane.showMessageDialog(null, "Nått gick fel!");
            System.out.println("Internt felmeddelande:" + e.getMessage());
        }
    }//GEN-LAST:event_cbElevhemItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrera;
    private javax.swing.JLabel btnTillbaka;
    private javax.swing.JComboBox<String> cbElevhem;
    private javax.swing.JComboBox<String> cbSovsal;
    private javax.swing.JLabel lbEfternamn;
    private javax.swing.JLabel lbElevhem;
    private javax.swing.JLabel lbFornamn;
    private javax.swing.JLabel lbRubrik;
    private javax.swing.JLabel lbSovsal;
    private javax.swing.JPanel panelTitel;
    private javax.swing.JTextField txtEfternamn;
    private javax.swing.JTextField txtFornamn;
    // End of variables declaration//GEN-END:variables
}
